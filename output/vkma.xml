<?xml version="1.0"?>
<registry>
	<comment>
Copyright (c) 2021 Cvelth (cvelth.mail@gmail.com)
SPDX-License-Identifier: Unlicense.</comment>
	<comment>
DO NOT MODIFY MANUALLY!
This file was generated using [generator](https://github.com/Cvelth/vkma_xml_generator).
Generated files are licensed under [The Unlicense](https://unlicense.org).
The generator itself is licensed under [MIT License](https://www.mit.edu/~amini/LICENSE.md).</comment>
	<comment>
This file was generated from xml 'doxygen' documentation for [vkma_bindings.hpp](https://github.com/Cvelth/vkma_bindings/blob/main/include/vkma_bindings.hpp) header.
Headers used for name lookup: 
[vk_mem_alloc.h (VulkanMemoryAllocator)](https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator/blob/master/include/vk_mem_alloc.h) 
[vulkan_core.h (Vulkan-Headers)](https://github.com/KhronosGroup/Vulkan-Headers/blob/master/include/vulkan/vulkan_core.h) 

It is intended to be used as [vulkan-hpp fork](https://github.com/Cvelth/vkma_vulkan_hpp_fork) generator input.
The goal is to generate a [vulkan-hpp](https://github.com/KhronosGroup/Vulkan-Hpp/blob/master/vulkan/vulkan.hpp) compatible header - a better c++ interface for VulkanMemoryAllocator.</comment>
	<platforms comment="empty">
		<platform name="does_not_matter" protect="VKMA_DOES_NOT_MATTER" comment="Why am I even required to specify this?" />
	</platforms>
	<tags comment="empty">
		<tag name="WC" author="Who cares?" contact="@cvelth" />
	</tags>
	<types comment="VKMA type definitions">
		<comment>Why is a comment here required?!</comment>
		<type name="vma" category="include">#include "vk_mem_alloc.h"</type>
		<type category="basetype">
			<name>uint32_t</name>
		</type>
		<type category="bitmask" requires="VkmaPoolCreateFlagBits">typedef <type>VkFlags</type> <name>VkmaPoolCreateFlags</name>;</type>
		<type category="basetype">
			<name>uint64_t</name>
		</type>
		<type category="basetype">typedef <type>uint64_t</type> <name>VkDeviceSize</name>;</type>
		<type category="basetype">
			<name>size_t</name>
		</type>
		<type category="basetype">
			<name>float</name>
		</type>
		<type category="basetype">
			<name>void</name>
		</type>
		<type category="struct" name="VkmaPoolCreateInfo">
			<member><type>uint32_t</type> <name>memoryTypeIndex</name>
			</member>
			<member><type>VkmaPoolCreateFlags</type> <name>flags</name>
			</member>
			<member><type>VkDeviceSize</type> <name>blockSize</name>
			</member>
			<member><type>size_t</type> <name>minBlockCount</name>
			</member>
			<member><type>size_t</type> <name>maxBlockCount</name>
			</member>
			<member><type>float</type> <name>priority</name>
			</member>
			<member><type>VkDeviceSize</type> <name>minAllocationAlignment</name>
			</member>
			<member><type>void</type>* <name>pMemoryAllocateNext</name>
			</member>
		</type>
		<type name="VkmaMemoryUsage" category="enum" />
		<type category="bitmask" requires="VkmaAllocationCreateFlagBits">typedef <type>VkFlags</type> <name>VkmaAllocationCreateFlags</name>;</type>
		<type category="basetype">typedef <type>uint32_t</type> <name>VkFlags</name>;</type>
		<type category="basetype">typedef <type>VkFlags</type> <name>VkMemoryPropertyFlags</name>;</type>
		<type category="handle" objtypeenum="VKMA_ALLOCATOR">
			<type>VK_DEFINE_HANDLE</type>(<name>VkmaAllocator</name>)</type>
		<type category="handle" parent="VkmaAllocator" objtypeenum="VKMA_POOL">
			<type>VK_DEFINE_NON_DISPATCHABLE_HANDLE</type>(<name>VkmaPool</name>)</type>
		<type category="struct" name="VkmaAllocationCreateInfo">
			<member><type>VkmaAllocationCreateFlags</type> <name>flags</name>
			</member>
			<member><type>VkmaMemoryUsage</type> <name>usage</name>
			</member>
			<member><type>VkMemoryPropertyFlags</type> <name>requiredFlags</name>
			</member>
			<member><type>VkMemoryPropertyFlags</type> <name>preferredFlags</name>
			</member>
			<member><type>uint32_t</type> <name>memoryTypeBits</name>
			</member>
			<member><type>VkmaPool</type> <name>pool</name>
			</member>
			<member><type>void</type>* <name>pUserData</name>
			</member>
			<member><type>float</type> <name>priority</name>
			</member>
		</type>
		<type category="bitmask" requires="VkmaVirtualAllocationCreateFlagBits">typedef <type>VkFlags</type> <name>VkmaVirtualAllocationCreateFlags</name>;</type>
		<type category="struct" name="VkmaVirtualAllocationCreateInfo">
			<member><type>VkDeviceSize</type> <name>size</name>
			</member>
			<member><type>VkDeviceSize</type> <name>alignment</name>
			</member>
			<member><type>VkmaVirtualAllocationCreateFlags</type> <name>flags</name>
			</member>
			<member><type>void</type>* <name>pUserData</name>
			</member>
		</type>
		<type category="basetype">
			<name>VkDeviceMemory</name>
		</type>
		<type category="funcpointer">typedef void(*<name>PFN_vkmaAllocateDeviceMemoryFunction</name>)(<type>VkmaAllocator</type> allocator, <type>uint32_t</type> memoryType, <type>VkDeviceMemory</type> memory, <type>VkDeviceSize</type> size, <type>void</type> *pUserData);</type>
		<type category="funcpointer">typedef void(*<name>PFN_vkmaFreeDeviceMemoryFunction</name>)(<type>VkmaAllocator</type> allocator, <type>uint32_t</type> memoryType, <type>VkDeviceMemory</type> memory, <type>VkDeviceSize</type> size, <type>void</type> *pUserData);</type>
		<type category="struct" name="VkmaDeviceMemoryCallbacks">
			<member><type>PFN_vkmaAllocateDeviceMemoryFunction</type> <name>pfnAllocate</name>
			</member>
			<member><type>PFN_vkmaFreeDeviceMemoryFunction</type> <name>pfnFree</name>
			</member>
			<member><type>void</type>* <name>pUserData</name>
			</member>
		</type>
		<type category="bitmask" requires="VkmaAllocatorCreateFlagBits">typedef <type>VkFlags</type> <name>VkmaAllocatorCreateFlags</name>;</type>
		<type category="basetype">
			<name>VkPhysicalDevice</name>
		</type>
		<type category="basetype">
			<name>VkDevice</name>
		</type>
		<type category="basetype">struct <name>VkAllocationCallbacks</name>;</type>
		<type category="basetype">
			<name>PFN_vkGetInstanceProcAddr</name>
		</type>
		<type category="basetype">
			<name>PFN_vkGetDeviceProcAddr</name>
		</type>
		<type category="basetype">
			<name>PFN_vkGetPhysicalDeviceProperties</name>
		</type>
		<type category="basetype">
			<name>PFN_vkGetPhysicalDeviceMemoryProperties</name>
		</type>
		<type category="basetype">
			<name>PFN_vkAllocateMemory</name>
		</type>
		<type category="basetype">
			<name>PFN_vkFreeMemory</name>
		</type>
		<type category="basetype">
			<name>PFN_vkMapMemory</name>
		</type>
		<type category="basetype">
			<name>PFN_vkUnmapMemory</name>
		</type>
		<type category="basetype">
			<name>PFN_vkFlushMappedMemoryRanges</name>
		</type>
		<type category="basetype">
			<name>PFN_vkInvalidateMappedMemoryRanges</name>
		</type>
		<type category="basetype">
			<name>PFN_vkBindBufferMemory</name>
		</type>
		<type category="basetype">
			<name>PFN_vkBindImageMemory</name>
		</type>
		<type category="basetype">
			<name>PFN_vkGetBufferMemoryRequirements</name>
		</type>
		<type category="basetype">
			<name>PFN_vkGetImageMemoryRequirements</name>
		</type>
		<type category="basetype">
			<name>PFN_vkCreateBuffer</name>
		</type>
		<type category="basetype">
			<name>PFN_vkDestroyBuffer</name>
		</type>
		<type category="basetype">
			<name>PFN_vkCreateImage</name>
		</type>
		<type category="basetype">
			<name>PFN_vkDestroyImage</name>
		</type>
		<type category="basetype">
			<name>PFN_vkCmdCopyBuffer</name>
		</type>
		<type category="basetype">
			<name>PFN_vkGetBufferMemoryRequirements2KHR</name>
		</type>
		<type category="basetype">
			<name>PFN_vkGetImageMemoryRequirements2KHR</name>
		</type>
		<type category="basetype">
			<name>PFN_vkBindBufferMemory2KHR</name>
		</type>
		<type category="basetype">
			<name>PFN_vkBindImageMemory2KHR</name>
		</type>
		<type category="basetype">
			<name>PFN_vkGetPhysicalDeviceMemoryProperties2KHR</name>
		</type>
		<type category="basetype">
			<name>PFN_vkGetDeviceBufferMemoryRequirements</name>
		</type>
		<type category="basetype">
			<name>PFN_vkGetDeviceImageMemoryRequirements</name>
		</type>
		<type category="struct" name="VkmaVulkanFunctions">
			<member><type>PFN_vkGetInstanceProcAddr</type> <name>vkGetInstanceProcAddr</name>
			</member>
			<member><type>PFN_vkGetDeviceProcAddr</type> <name>vkGetDeviceProcAddr</name>
			</member>
			<member><type>PFN_vkGetPhysicalDeviceProperties</type> <name>vkGetPhysicalDeviceProperties</name>
			</member>
			<member><type>PFN_vkGetPhysicalDeviceMemoryProperties</type> <name>vkGetPhysicalDeviceMemoryProperties</name>
			</member>
			<member><type>PFN_vkAllocateMemory</type> <name>vkAllocateMemory</name>
			</member>
			<member><type>PFN_vkFreeMemory</type> <name>vkFreeMemory</name>
			</member>
			<member><type>PFN_vkMapMemory</type> <name>vkMapMemory</name>
			</member>
			<member><type>PFN_vkUnmapMemory</type> <name>vkUnmapMemory</name>
			</member>
			<member><type>PFN_vkFlushMappedMemoryRanges</type> <name>vkFlushMappedMemoryRanges</name>
			</member>
			<member><type>PFN_vkInvalidateMappedMemoryRanges</type> <name>vkInvalidateMappedMemoryRanges</name>
			</member>
			<member><type>PFN_vkBindBufferMemory</type> <name>vkBindBufferMemory</name>
			</member>
			<member><type>PFN_vkBindImageMemory</type> <name>vkBindImageMemory</name>
			</member>
			<member><type>PFN_vkGetBufferMemoryRequirements</type> <name>vkGetBufferMemoryRequirements</name>
			</member>
			<member><type>PFN_vkGetImageMemoryRequirements</type> <name>vkGetImageMemoryRequirements</name>
			</member>
			<member><type>PFN_vkCreateBuffer</type> <name>vkCreateBuffer</name>
			</member>
			<member><type>PFN_vkDestroyBuffer</type> <name>vkDestroyBuffer</name>
			</member>
			<member><type>PFN_vkCreateImage</type> <name>vkCreateImage</name>
			</member>
			<member><type>PFN_vkDestroyImage</type> <name>vkDestroyImage</name>
			</member>
			<member><type>PFN_vkCmdCopyBuffer</type> <name>vkCmdCopyBuffer</name>
			</member>
			<member><type>PFN_vkGetBufferMemoryRequirements2KHR</type> <name>vkGetBufferMemoryRequirements2KHR</name>
			</member>
			<member><type>PFN_vkGetImageMemoryRequirements2KHR</type> <name>vkGetImageMemoryRequirements2KHR</name>
			</member>
			<member><type>PFN_vkBindBufferMemory2KHR</type> <name>vkBindBufferMemory2KHR</name>
			</member>
			<member><type>PFN_vkBindImageMemory2KHR</type> <name>vkBindImageMemory2KHR</name>
			</member>
			<member><type>PFN_vkGetPhysicalDeviceMemoryProperties2KHR</type> <name>vkGetPhysicalDeviceMemoryProperties2KHR</name>
			</member>
			<member><type>PFN_vkGetDeviceBufferMemoryRequirements</type> <name>vkGetDeviceBufferMemoryRequirements</name>
			</member>
			<member><type>PFN_vkGetDeviceImageMemoryRequirements</type> <name>vkGetDeviceImageMemoryRequirements</name>
			</member>
		</type>
		<type category="basetype">
			<name>VkInstance</name>
		</type>
		<type category="basetype">typedef <type>VkFlags</type> <name>VkExternalMemoryHandleTypeFlags</name>;</type>
		<type category="basetype">typedef <type>VkExternalMemoryHandleTypeFlags</type> <name>VkExternalMemoryHandleTypeFlagsKHR</name>;</type>
		<type category="struct" name="VkmaAllocatorCreateInfo">
			<member><type>VkmaAllocatorCreateFlags</type> <name>flags</name>
			</member>
			<member><type>VkPhysicalDevice</type> <name>physicalDevice</name>
			</member>
			<member><type>VkDevice</type> <name>device</name>
			</member>
			<member><type>VkDeviceSize</type> <name>preferredLargeHeapBlockSize</name>
			</member>
			<member>const<type>VkAllocationCallbacks</type>* <name>pAllocationCallbacks</name>
			</member>
			<member>const<type>VkmaDeviceMemoryCallbacks</type>* <name>pDeviceMemoryCallbacks</name>
			</member>
			<member>const<type>VkDeviceSize</type>* <name>pHeapSizeLimit</name>
			</member>
			<member>const<type>VkmaVulkanFunctions</type>* <name>pVulkanFunctions</name>
			</member>
			<member><type>VkInstance</type> <name>instance</name>
			</member>
			<member><type>uint32_t</type> <name>vulkanApiVersion</name>
			</member>
			<member>const<type>VkExternalMemoryHandleTypeFlagsKHR</type>* <name>pTypeExternalMemoryHandleTypes</name>
			</member>
		</type>
		<type category="handle" parent="VkmaAllocator" objtypeenum="VKMA_BUFFER">
			<type>VK_DEFINE_HANDLE</type>(<name>VkmaBuffer</name>)</type>
		<type category="handle" objtypeenum="VKMA_VIRTUAL_BLOCK">
			<type>VK_DEFINE_HANDLE</type>(<name>VkmaVirtualBlock</name>)</type>
		<type name="VkmaDefragmentationMoveOperation" category="enum" />
		<type category="handle" parent="VkmaAllocator" objtypeenum="VKMA_ALLOCATION">
			<type>VK_DEFINE_NON_DISPATCHABLE_HANDLE</type>(<name>VkmaAllocation</name>)</type>
		<type category="struct" name="VkmaDefragmentationMove">
			<member><type>VkmaDefragmentationMoveOperation</type> <name>operation</name>
			</member>
			<member><type>VkmaAllocation</type> <name>srcAllocation</name>
			</member>
			<member><type>VkmaAllocation</type> <name>dstTmpAllocation</name>
			</member>
		</type>
		<type category="struct" name="VkmaDefragmentationPassMoveInfo">
			<member><type>uint32_t</type> <name>moveCount</name>
			</member>
			<member><type>VkmaDefragmentationMove</type>* <name>pMoves</name>
			</member>
		</type>
		<type category="struct" name="VkmaStatistics">
			<member><type>uint32_t</type> <name>blockCount</name>
			</member>
			<member><type>uint32_t</type> <name>allocationCount</name>
			</member>
			<member><type>VkDeviceSize</type> <name>blockBytes</name>
			</member>
			<member><type>VkDeviceSize</type> <name>allocationBytes</name>
			</member>
		</type>
		<type category="struct" name="VkmaBudget">
			<member><type>VkmaStatistics</type> <name>statistics</name>
			</member>
			<member><type>VkDeviceSize</type> <name>usage</name>
			</member>
			<member><type>VkDeviceSize</type> <name>budget</name>
			</member>
		</type>
		<type category="basetype">
			<name>VkBuffer</name>
		</type>
		<type name="VkmaAllocatorCreateFlagBits" category="enum" />
		<type category="bitmask" requires="VkmaDefragmentationFlagBits">typedef <type>VkFlags</type> <name>VkmaDefragmentationFlags</name>;</type>
		<type category="struct" name="VkmaDefragmentationInfo">
			<member><type>VkmaDefragmentationFlags</type> <name>flags</name>
			</member>
			<member><type>VkmaPool</type> <name>pool</name>
			</member>
			<member><type>VkDeviceSize</type> <name>maxBytesPerPass</name>
			</member>
			<member><type>uint32_t</type> <name>maxAllocationsPerPass</name>
			</member>
		</type>
		<type category="struct" name="VkmaVirtualAllocationInfo">
			<member><type>VkDeviceSize</type> <name>offset</name>
			</member>
			<member><type>VkDeviceSize</type> <name>size</name>
			</member>
			<member><type>void</type>* <name>pUserData</name>
			</member>
		</type>
		<type category="basetype">typedef <type>uint32_t</type> <name>VkBool32</name>;</type>
		<type category="struct" name="VkmaDetailedStatistics">
			<member><type>VkmaStatistics</type> <name>statistics</name>
			</member>
			<member><type>uint32_t</type> <name>unusedRangeCount</name>
			</member>
			<member><type>VkDeviceSize</type> <name>allocationSizeMin</name>
			</member>
			<member><type>VkDeviceSize</type> <name>allocationSizeMax</name>
			</member>
			<member><type>VkDeviceSize</type> <name>unusedRangeSizeMin</name>
			</member>
			<member><type>VkDeviceSize</type> <name>unusedRangeSizeMax</name>
			</member>
		</type>
		<type category="bitmask" requires="VkmaVirtualBlockCreateFlagBits">typedef <type>VkFlags</type> <name>VkmaVirtualBlockCreateFlags</name>;</type>
		<type category="struct" name="VkmaTotalStatistics">
			<member><type>VkmaDetailedStatistics</type> <name>memoryType</name>[<enum>VK_MAX_MEMORY_TYPES</enum>]</member>
			<member><type>VkmaDetailedStatistics</type> <name>memoryHeap</name>[<enum>VK_MAX_MEMORY_HEAPS</enum>]</member>
			<member><type>VkmaDetailedStatistics</type> <name>total</name>
			</member>
		</type>
		<type category="struct" name="VkmaVirtualBlockCreateInfo">
			<member><type>VkDeviceSize</type> <name>size</name>
			</member>
			<member><type>VkmaVirtualBlockCreateFlags</type> <name>flags</name>
			</member>
			<member>const<type>VkAllocationCallbacks</type>* <name>pAllocationCallbacks</name>
			</member>
		</type>
		<type name="VkmaResult" category="enum" />
		<type category="handle" parent="VkmaVirtualBlock" objtypeenum="VKMA_VIRTUAL_ALLOCATION">
			<type>VK_DEFINE_NON_DISPATCHABLE_HANDLE</type>(<name>VkmaVirtualAllocation</name>)</type>
		<type category="basetype">
			<name>char</name>
		</type>
		<type category="struct" name="VkmaAllocationInfo">
			<member><type>uint32_t</type> <name>memoryType</name>
			</member>
			<member><type>VkDeviceMemory</type> <name>deviceMemory</name>
			</member>
			<member><type>VkDeviceSize</type> <name>offset</name>
			</member>
			<member><type>VkDeviceSize</type> <name>size</name>
			</member>
			<member><type>void</type>* <name>pMappedData</name>
			</member>
			<member><type>void</type>* <name>pUserData</name>
			</member>
			<member>const<type>char</type>* <name>pName</name>
			</member>
		</type>
		<type category="define">#define <name>VKMA_ASSERT</name> VMA_ASSERT</type>
		<type name="VkmaVirtualAllocationCreateFlagBits" category="enum" />
		<type category="define">#define <name>VKMA_NULL_HANDLE</name> VK_NULL_HANDLE</type>
		<type name="VkmaAllocationCreateFlagBits" category="enum" />
		<type name="VkmaPoolCreateFlagBits" category="enum" />
		<type name="VkmaDefragmentationFlagBits" category="enum" />
		<type name="VkmaVirtualBlockCreateFlagBits" category="enum" />
		<type category="struct" name="VkmaDefragmentationStats">
			<member><type>VkDeviceSize</type> <name>bytesMoved</name>
			</member>
			<member><type>VkDeviceSize</type> <name>bytesFreed</name>
			</member>
			<member><type>uint32_t</type> <name>allocationsMoved</name>
			</member>
			<member><type>uint32_t</type> <name>deviceMemoryBlocksFreed</name>
			</member>
		</type>
		<type category="basetype">struct <name>VkPhysicalDeviceProperties</name>;</type>
		<type category="basetype">struct <name>VkPhysicalDeviceMemoryProperties</name>;</type>
		<type category="basetype">struct <name>VkBufferCreateInfo</name>;</type>
		<type category="basetype">struct <name>VkMemoryRequirements</name>;</type>
		<type category="basetype">struct <name>VkImageCreateInfo</name>;</type>
		<type category="basetype">
			<name>VkImage</name>
		</type>
		<type category="handle" parent="VkmaAllocator" objtypeenum="VKMA_DEFRAGMENTATION_CONTEXT">
			<type>VK_DEFINE_NON_DISPATCHABLE_HANDLE</type>(<name>VkmaDefragmentationContext</name>)</type>
		<type category="handle" parent="VkmaAllocator" objtypeenum="VKMA_IMAGE">
			<type>VK_DEFINE_HANDLE</type>(<name>VkmaImage</name>)</type>
	</types>
	<enums name="API Constants" comment="Hardcoded constants - not an enumerated type, part of the header boilerplate">
		<enum value="32U" name="VK_MAX_MEMORY_TYPES" />
		<enum value="16U" name="VK_MAX_MEMORY_HEAPS" />
	</enums>
	<enums name="VkmaMemoryUsage" type="enum">
		<enum value="0" name="VMA_MEMORY_USAGE_UNKNOWN" />
		<enum value="1" name="VMA_MEMORY_USAGE_GPU_ONLY" />
		<enum value="2" name="VMA_MEMORY_USAGE_CPU_ONLY" />
		<enum value="3" name="VMA_MEMORY_USAGE_CPU_TO_GPU" />
		<enum value="4" name="VMA_MEMORY_USAGE_GPU_TO_CPU" />
		<enum value="5" name="VMA_MEMORY_USAGE_CPU_COPY" />
		<enum value="6" name="VMA_MEMORY_USAGE_GPU_LAZILY_ALLOCATED" />
		<enum value="7" name="VMA_MEMORY_USAGE_AUTO" />
		<enum value="8" name="VMA_MEMORY_USAGE_AUTO_PREFER_DEVICE" />
		<enum value="9" name="VMA_MEMORY_USAGE_AUTO_PREFER_HOST" />
	</enums>
	<enums name="VkmaAllocatorCreateFlagBits" type="bitmask">
		<enum value="0x00000001" name="VMA_ALLOCATOR_CREATE_EXTERNALLY_SYNCHRONIZED_BIT" />
		<enum value="0x00000002" name="VMA_ALLOCATOR_CREATE_KHR_DEDICATED_ALLOCATION_BIT" />
		<enum value="0x00000004" name="VMA_ALLOCATOR_CREATE_KHR_BIND_MEMORY2_BIT" />
		<enum value="0x00000008" name="VMA_ALLOCATOR_CREATE_EXT_MEMORY_BUDGET_BIT" />
		<enum value="0x00000010" name="VMA_ALLOCATOR_CREATE_AMD_DEVICE_COHERENT_MEMORY_BIT" />
		<enum value="0x00000020" name="VMA_ALLOCATOR_CREATE_BUFFER_DEVICE_ADDRESS_BIT" />
		<enum value="0x00000040" name="VMA_ALLOCATOR_CREATE_EXT_MEMORY_PRIORITY_BIT" />
	</enums>
	<enums name="VkmaDefragmentationMoveOperation" type="enum">
		<enum value="0" name="VMA_DEFRAGMENTATION_MOVE_OPERATION_COPY" />
		<enum value="1" name="VMA_DEFRAGMENTATION_MOVE_OPERATION_IGNORE" />
		<enum value="2" name="VMA_DEFRAGMENTATION_MOVE_OPERATION_DESTROY" />
	</enums>
	<enums name="VkmaVirtualAllocationCreateFlagBits" type="bitmask">
		<enum value="VMA_ALLOCATION_CREATE_UPPER_ADDRESS_BIT" name="VMA_VIRTUAL_ALLOCATION_CREATE_UPPER_ADDRESS_BIT" />
		<enum value="VMA_ALLOCATION_CREATE_STRATEGY_MIN_MEMORY_BIT" name="VMA_VIRTUAL_ALLOCATION_CREATE_STRATEGY_MIN_MEMORY_BIT" />
		<enum value="VMA_ALLOCATION_CREATE_STRATEGY_MIN_TIME_BIT" name="VMA_VIRTUAL_ALLOCATION_CREATE_STRATEGY_MIN_TIME_BIT" />
		<enum value="VMA_ALLOCATION_CREATE_STRATEGY_MIN_OFFSET_BIT" name="VMA_VIRTUAL_ALLOCATION_CREATE_STRATEGY_MIN_OFFSET_BIT" />
		<enum value="VMA_ALLOCATION_CREATE_STRATEGY_MASK" name="VMA_VIRTUAL_ALLOCATION_CREATE_STRATEGY_MASK" />
	</enums>
	<enums name="VkmaResult" type="enum">
		<enum value="0" name="VK_SUCCESS" />
		<enum value="1" name="VK_NOT_READY" />
		<enum value="2" name="VK_TIMEOUT" />
		<enum value="3" name="VK_EVENT_SET" />
		<enum value="4" name="VK_EVENT_RESET" />
		<enum value="5" name="VK_INCOMPLETE" />
		<enum value="-1" name="VK_ERROR_OUT_OF_HOST_MEMORY" />
		<enum value="-2" name="VK_ERROR_OUT_OF_DEVICE_MEMORY" />
		<enum value="-3" name="VK_ERROR_INITIALIZATION_FAILED" />
		<enum value="-4" name="VK_ERROR_DEVICE_LOST" />
		<enum value="-5" name="VK_ERROR_MEMORY_MAP_FAILED" />
		<enum value="-6" name="VK_ERROR_LAYER_NOT_PRESENT" />
		<enum value="-7" name="VK_ERROR_EXTENSION_NOT_PRESENT" />
		<enum value="-8" name="VK_ERROR_FEATURE_NOT_PRESENT" />
		<enum value="-9" name="VK_ERROR_INCOMPATIBLE_DRIVER" />
		<enum value="-10" name="VK_ERROR_TOO_MANY_OBJECTS" />
		<enum value="-11" name="VK_ERROR_FORMAT_NOT_SUPPORTED" />
		<enum value="-12" name="VK_ERROR_FRAGMENTED_POOL" />
		<enum value="-13" name="VK_ERROR_UNKNOWN" />
		<enum value="-1000069000" name="VK_ERROR_OUT_OF_POOL_MEMORY" />
		<enum value="-1000072003" name="VK_ERROR_INVALID_EXTERNAL_HANDLE" />
		<enum value="-1000161000" name="VK_ERROR_FRAGMENTATION" />
		<enum value="-1000257000" name="VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS" />
		<enum value="1000297000" name="VK_PIPELINE_COMPILE_REQUIRED" />
		<enum value="-1000000000" name="VK_ERROR_SURFACE_LOST_KHR" />
		<enum value="-1000000001" name="VK_ERROR_NATIVE_WINDOW_IN_USE_KHR" />
		<enum value="1000001003" name="VK_SUBOPTIMAL_KHR" />
		<enum value="-1000001004" name="VK_ERROR_OUT_OF_DATE_KHR" />
		<enum value="-1000003001" name="VK_ERROR_INCOMPATIBLE_DISPLAY_KHR" />
		<enum value="-1000011001" name="VK_ERROR_VALIDATION_FAILED_EXT" />
		<enum value="-1000012000" name="VK_ERROR_INVALID_SHADER_NV" />
		<enum value="-1000158000" name="VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT" />
		<enum value="-1000174001" name="VK_ERROR_NOT_PERMITTED_KHR" />
		<enum value="-1000255000" name="VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT" />
		<enum value="1000268000" name="VK_THREAD_IDLE_KHR" />
		<enum value="1000268001" name="VK_THREAD_DONE_KHR" />
		<enum value="1000268002" name="VK_OPERATION_DEFERRED_KHR" />
		<enum value="1000268003" name="VK_OPERATION_NOT_DEFERRED_KHR" />
		<enum value="-1000338000" name="VK_ERROR_COMPRESSION_EXHAUSTED_EXT" />
		<enum name="VK_ERROR_OUT_OF_POOL_MEMORY_KHR" alias="VK_ERROR_OUT_OF_POOL_MEMORY" />
		<enum name="VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR" alias="VK_ERROR_INVALID_EXTERNAL_HANDLE" />
		<enum name="VK_ERROR_FRAGMENTATION_EXT" alias="VK_ERROR_FRAGMENTATION" />
		<enum name="VK_ERROR_NOT_PERMITTED_EXT" alias="VK_ERROR_NOT_PERMITTED_KHR" />
		<enum name="VK_ERROR_INVALID_DEVICE_ADDRESS_EXT" alias="VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS" />
		<enum name="VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR" alias="VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS" />
		<enum name="VK_PIPELINE_COMPILE_REQUIRED_EXT" alias="VK_PIPELINE_COMPILE_REQUIRED" />
		<enum name="VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT" alias="VK_PIPELINE_COMPILE_REQUIRED" />
	</enums>
	<enums name="VkmaAllocationCreateFlagBits" type="bitmask">
		<enum value="0x00000001" name="VMA_ALLOCATION_CREATE_DEDICATED_MEMORY_BIT" />
		<enum value="0x00000002" name="VMA_ALLOCATION_CREATE_NEVER_ALLOCATE_BIT" />
		<enum value="0x00000004" name="VMA_ALLOCATION_CREATE_MAPPED_BIT" />
		<enum value="0x00000020" name="VMA_ALLOCATION_CREATE_USER_DATA_COPY_STRING_BIT" />
		<enum value="0x00000040" name="VMA_ALLOCATION_CREATE_UPPER_ADDRESS_BIT" />
		<enum value="0x00000080" name="VMA_ALLOCATION_CREATE_DONT_BIND_BIT" />
		<enum value="0x00000100" name="VMA_ALLOCATION_CREATE_WITHIN_BUDGET_BIT" />
		<enum value="0x00000200" name="VMA_ALLOCATION_CREATE_CAN_ALIAS_BIT" />
		<enum value="0x00000400" name="VMA_ALLOCATION_CREATE_HOST_ACCESS_SEQUENTIAL_WRITE_BIT" />
		<enum value="0x00000800" name="VMA_ALLOCATION_CREATE_HOST_ACCESS_RANDOM_BIT" />
		<enum value="0x00001000" name="VMA_ALLOCATION_CREATE_HOST_ACCESS_ALLOW_TRANSFER_INSTEAD_BIT" />
		<enum value="0x00010000" name="VMA_ALLOCATION_CREATE_STRATEGY_MIN_MEMORY_BIT" />
		<enum value="0x00020000" name="VMA_ALLOCATION_CREATE_STRATEGY_MIN_TIME_BIT" />
		<enum value="0x00040000" name="VMA_ALLOCATION_CREATE_STRATEGY_MIN_OFFSET_BIT" />
		<enum value="VMA_ALLOCATION_CREATE_STRATEGY_MIN_MEMORY_BIT | VMA_ALLOCATION_CREATE_STRATEGY_MIN_TIME_BIT | VMA_ALLOCATION_CREATE_STRATEGY_MIN_OFFSET_BIT" name="VMA_ALLOCATION_CREATE_STRATEGY_MASK" />
		<enum name="VMA_ALLOCATION_CREATE_STRATEGY_BEST_FIT_BIT" alias="VMA_ALLOCATION_CREATE_STRATEGY_MIN_MEMORY_BIT" />
		<enum name="VMA_ALLOCATION_CREATE_STRATEGY_FIRST_FIT_BIT" alias="VMA_ALLOCATION_CREATE_STRATEGY_MIN_TIME_BIT" />
	</enums>
	<enums name="VkmaPoolCreateFlagBits" type="bitmask">
		<enum value="0x00000002" name="VMA_POOL_CREATE_IGNORE_BUFFER_IMAGE_GRANULARITY_BIT" />
		<enum value="0x00000004" name="VMA_POOL_CREATE_LINEAR_ALGORITHM_BIT" />
		<enum name="VMA_POOL_CREATE_ALGORITHM_MASK" alias="VMA_POOL_CREATE_LINEAR_ALGORITHM_BIT" />
	</enums>
	<enums name="VkmaDefragmentationFlagBits" type="bitmask">
		<enum value="0x1" name="VMA_DEFRAGMENTATION_FLAG_ALGORITHM_FAST_BIT" />
		<enum value="0x2" name="VMA_DEFRAGMENTATION_FLAG_ALGORITHM_BALANCED_BIT" />
		<enum value="0x4" name="VMA_DEFRAGMENTATION_FLAG_ALGORITHM_FULL_BIT" />
		<enum value="0x8" name="VMA_DEFRAGMENTATION_FLAG_ALGORITHM_EXTENSIVE_BIT" />
		<enum value="VMA_DEFRAGMENTATION_FLAG_ALGORITHM_FAST_BIT | VMA_DEFRAGMENTATION_FLAG_ALGORITHM_BALANCED_BIT | VMA_DEFRAGMENTATION_FLAG_ALGORITHM_FULL_BIT | VMA_DEFRAGMENTATION_FLAG_ALGORITHM_EXTENSIVE_BIT" name="VMA_DEFRAGMENTATION_FLAG_ALGORITHM_MASK" />
	</enums>
	<enums name="VkmaVirtualBlockCreateFlagBits" type="bitmask">
		<enum value="0x00000001" name="VMA_VIRTUAL_BLOCK_CREATE_LINEAR_ALGORITHM_BIT" />
		<enum name="VMA_VIRTUAL_BLOCK_CREATE_ALGORITHM_MASK" alias="VMA_VIRTUAL_BLOCK_CREATE_LINEAR_ALGORITHM_BIT" />
	</enums>
	<commands comment="VKMA command definitions">
		<command>
			<proto><type>void</type> <name>vkmaDestroyBuffer</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaBuffer</type> <name>buffer</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaSetAllocationUserData</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param>const<type>void</type>* <name>pUserData</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetBuffer</name>
			</proto>
			<param><type>VkmaBuffer</type> <name>buffer</name>
			</param>
			<param><type>VkBuffer</type>* <name>pBuffer</name>
			</param>
		</command>
		<command>
			<proto><type>VkBool32</type> <name>vkmaIsVirtualBlockEmpty</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaCheckCorruption</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>uint32_t</type> <name>memoryTypeBits</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaCreateVirtualBlock</name>
			</proto>
			<param>const<type>VkmaVirtualBlockCreateInfo</type>* <name>pCreateInfo</name>
			</param>
			<param><type>VkmaVirtualBlock</type>* <name>pVirtualBlock</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetVirtualAllocationInfo</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
			<param><type>VkmaVirtualAllocation</type> <name>allocation</name>
			</param>
			<param><type>VkmaVirtualAllocationInfo</type>* <name>pVirtualAllocInfo</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetAllocationInfo</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param><type>VkmaAllocationInfo</type>* <name>pAllocationInfo</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaCalculateStatistics</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaTotalStatistics</type>* <name>pStats</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaCreateAllocator</name>
			</proto>
			<param>const<type>VkmaAllocatorCreateInfo</type>* <name>pCreateInfo</name>
			</param>
			<param><type>VkmaAllocator</type>* <name>pAllocator</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaDestroyAllocator</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetPhysicalDeviceProperties</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkPhysicalDeviceProperties</type>* <name>pPhysicalDeviceProperties</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetMemoryTypeProperties</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>uint32_t</type> <name>memoryTypeIndex</name>
			</param>
			<param><type>VkMemoryPropertyFlags</type>* <name>pFlags</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetMemoryProperties</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkPhysicalDeviceMemoryProperties</type>* <name>pPhysicalDeviceMemoryProperties</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaSetCurrentFrameIndex</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>uint32_t</type> <name>frameIndex</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetHeapBudgets</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaBudget</type>* <name>pBudgets</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaFindMemoryTypeIndex</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>uint32_t</type> <name>memoryTypeBits</name>
			</param>
			<param>const<type>VkmaAllocationCreateInfo</type>* <name>pAllocationCreateInfo</name>
			</param>
			<param><type>uint32_t</type>* <name>pMemoryTypeIndex</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaFindMemoryTypeIndexForBufferInfo</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param>const<type>VkBufferCreateInfo</type>* <name>pBufferCreateInfo</name>
			</param>
			<param>const<type>VkmaAllocationCreateInfo</type>* <name>pAllocationCreateInfo</name>
			</param>
			<param><type>uint32_t</type>* <name>pMemoryTypeIndex</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaSetAllocationName</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param>const<type>char</type>* <name>pName</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaAllocateMemory</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param>const<type>VkMemoryRequirements</type>* <name>pVkMemoryRequirements</name>
			</param>
			<param>const<type>VkmaAllocationCreateInfo</type>* <name>pCreateInfo</name>
			</param>
			<param><type>VkmaAllocation</type>* <name>pAllocation</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaFindMemoryTypeIndexForImageInfo</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param>const<type>VkImageCreateInfo</type>* <name>pImageCreateInfo</name>
			</param>
			<param>const<type>VkmaAllocationCreateInfo</type>* <name>pAllocationCreateInfo</name>
			</param>
			<param><type>uint32_t</type>* <name>pMemoryTypeIndex</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaCreatePool</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param>const<type>VkmaPoolCreateInfo</type>* <name>pCreateInfo</name>
			</param>
			<param><type>VkmaPool</type>* <name>pPool</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaDestroyPool</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaPool</type> <name>pool</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetPoolStatistics</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaPool</type> <name>pool</name>
			</param>
			<param><type>VkmaStatistics</type>* <name>pPoolStats</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaCalculatePoolStatistics</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaPool</type> <name>pool</name>
			</param>
			<param><type>VkmaDetailedStatistics</type>* <name>pPoolStats</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaCheckPoolCorruption</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaPool</type> <name>pool</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetPoolName</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaPool</type> <name>pool</name>
			</param>
			<param>const<type>char</type>** <name>ppName</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaSetPoolName</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaPool</type> <name>pool</name>
			</param>
			<param>const<type>char</type>* <name>pName</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaAllocateMemoryPages</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param>const<type>VkMemoryRequirements</type>* <name>pVkMemoryRequirements</name>
			</param>
			<param>const<type>VkmaAllocationCreateInfo</type>* <name>pCreateInfo</name>
			</param>
			<param><type>size_t</type> <name>allocationCount</name>
			</param>
			<param><type>VkmaAllocation</type>* <name>pAllocations</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaAllocateMemoryForBuffer</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkBuffer</type> <name>buffer</name>
			</param>
			<param>const<type>VkmaAllocationCreateInfo</type>* <name>pCreateInfo</name>
			</param>
			<param><type>VkmaAllocation</type>* <name>pAllocation</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaAllocateMemoryForImage</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkImage</type> <name>image</name>
			</param>
			<param>const<type>VkmaAllocationCreateInfo</type>* <name>pCreateInfo</name>
			</param>
			<param><type>VkmaAllocation</type>* <name>pAllocation</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaFreeMemory</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param>const<type>VkmaAllocation</type> <name>allocation</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaFreeMemoryPages</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>size_t</type> <name>allocationCount</name>
			</param>
			<param>const<type>VkmaAllocation</type>* <name>pAllocations</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetAllocationMemoryProperties</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param><type>VkMemoryPropertyFlags</type>* <name>pFlags</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaMapMemory</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param><type>void</type>** <name>ppData</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaUnmapMemory</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaFlushAllocation</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param><type>VkDeviceSize</type> <name>offset</name>
			</param>
			<param><type>VkDeviceSize</type> <name>size</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaInvalidateAllocation</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param><type>VkDeviceSize</type> <name>offset</name>
			</param>
			<param><type>VkDeviceSize</type> <name>size</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaFlushAllocations</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>uint32_t</type> <name>allocationCount</name>
			</param>
			<param>const<type>VkmaAllocation</type>* <name>allocations</name>
			</param>
			<param>const<type>VkDeviceSize</type>* <name>offsets</name>
			</param>
			<param>const<type>VkDeviceSize</type>* <name>sizes</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaInvalidateAllocations</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>uint32_t</type> <name>allocationCount</name>
			</param>
			<param>const<type>VkmaAllocation</type>* <name>allocations</name>
			</param>
			<param>const<type>VkDeviceSize</type>* <name>offsets</name>
			</param>
			<param>const<type>VkDeviceSize</type>* <name>sizes</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaBeginDefragmentation</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param>const<type>VkmaDefragmentationInfo</type>* <name>pInfo</name>
			</param>
			<param><type>VkmaDefragmentationContext</type>* <name>pContext</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaEndDefragmentation</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaDefragmentationContext</type> <name>context</name>
			</param>
			<param><type>VkmaDefragmentationStats</type>* <name>pStats</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaBeginDefragmentationPass</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaDefragmentationContext</type> <name>context</name>
			</param>
			<param><type>VkmaDefragmentationPassMoveInfo</type>* <name>pPassInfo</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaBindBufferMemory</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param><type>VkBuffer</type> <name>buffer</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaEndDefragmentationPass</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaDefragmentationContext</type> <name>context</name>
			</param>
			<param><type>VkmaDefragmentationPassMoveInfo</type>* <name>pPassInfo</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaBindBufferMemory2</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param><type>VkDeviceSize</type> <name>allocationLocalOffset</name>
			</param>
			<param><type>VkBuffer</type> <name>buffer</name>
			</param>
			<param>const<type>void</type>* <name>pNext</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaBindImageMemory</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param><type>VkImage</type> <name>image</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaBindImageMemory2</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaAllocation</type> <name>allocation</name>
			</param>
			<param><type>VkDeviceSize</type> <name>allocationLocalOffset</name>
			</param>
			<param><type>VkImage</type> <name>image</name>
			</param>
			<param>const<type>void</type>* <name>pNext</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaCreateBuffer</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param>const<type>VkBufferCreateInfo</type>* <name>pBufferCreateInfo</name>
			</param>
			<param>const<type>VkmaAllocationCreateInfo</type>* <name>pAllocationCreateInfo</name>
			</param>
			<param><type>VkmaBuffer</type>* <name>pBuffer</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaCreateImage</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param>const<type>VkImageCreateInfo</type>* <name>pImageCreateInfo</name>
			</param>
			<param>const<type>VkmaAllocationCreateInfo</type>* <name>pAllocationCreateInfo</name>
			</param>
			<param><type>VkmaImage</type>* <name>pImage</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaDestroyImage</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkmaImage</type> <name>image</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaDestroyVirtualBlock</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_PIPELINE_COMPILE_REQUIRED, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_KHR, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_ERROR_COMPRESSION_EXHAUSTED_EXT">
			<proto><type>VkmaResult</type> <name>vkmaVirtualAllocate</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
			<param>const<type>VkmaVirtualAllocationCreateInfo</type>* <name>pCreateInfo</name>
			</param>
			<param><type>VkmaVirtualAllocation</type>* <name>pAllocation</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaVirtualFree</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
			<param><type>VkmaVirtualAllocation</type> <name>allocation</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaClearVirtualBlock</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaSetVirtualAllocationUserData</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
			<param><type>VkmaVirtualAllocation</type> <name>allocation</name>
			</param>
			<param>const<type>void</type>* <name>pUserData</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetVirtualBlockStatistics</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
			<param><type>VkmaStatistics</type>* <name>pStats</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaCalculateVirtualBlockStatistics</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
			<param><type>VkmaDetailedStatistics</type>* <name>pStats</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaBuildVirtualBlockStatsString</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
			<param><type>VkBool32</type> <name>detailedMap</name>
			</param>
			<param><type>char</type>** <name>ppStatsString</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaFreeVirtualBlockStatsString</name>
			</proto>
			<param><type>VkmaVirtualBlock</type> <name>virtualBlock</name>
			</param>
			<param>const<type>char</type>* <name>pStatsString</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaBuildStatsString</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param><type>VkBool32</type> <name>detailedMap</name>
			</param>
			<param><type>char</type>** <name>ppStatsString</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaFreeStatsString</name>
			</proto>
			<param><type>VkmaAllocator</type> <name>allocator</name>
			</param>
			<param>const<type>char</type>* <name>pStatsString</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetBufferAllocation</name>
			</proto>
			<param><type>VkmaBuffer</type> <name>buffer</name>
			</param>
			<param><type>VkmaAllocation</type>* <name>pAllocation</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetImage</name>
			</proto>
			<param><type>VkmaImage</type> <name>image</name>
			</param>
			<param><type>VkImage</type>* <name>pImage</name>
			</param>
		</command>
		<command>
			<proto><type>void</type> <name>vkmaGetImageAllocation</name>
			</proto>
			<param><type>VkmaImage</type> <name>image</name>
			</param>
			<param><type>VkmaAllocation</type>* <name>pAllocation</name>
			</param>
		</command>
	</commands>
	<feature api="vkma" name="VKMA_VERSION_3_0_1" number="3.0.1" comment="VKMA API interface definitions">
		<require comment="a mess, isn't it?">
			<type name="vma" />
			<type name="VkmaAllocator" />
			<type name="VkmaVirtualAllocationCreateInfo" />
			<type name="VkmaAllocationCreateFlags" />
			<type name="VkmaPoolCreateFlags" />
			<type name="VkmaAllocationCreateInfo" />
			<type name="VkmaPoolCreateInfo" />
			<type name="VkmaMemoryUsage" />
			<type name="VkmaPool" />
			<type name="VkmaVirtualAllocationCreateFlags" />
			<type name="VkmaVirtualAllocationCreateFlagBits" />
			<type name="VKMA_ASSERT" />
			<type name="VkmaVirtualBlockCreateFlags" />
			<type name="PFN_vkmaAllocateDeviceMemoryFunction" />
			<type name="PFN_vkmaFreeDeviceMemoryFunction" />
			<type name="VkmaDeviceMemoryCallbacks" />
			<type name="VkmaDefragmentationPassMoveInfo" />
			<type name="VkmaVirtualBlock" />
			<type name="VkmaAllocatorCreateFlags" />
			<type name="VkmaVulkanFunctions" />
			<type name="VkmaAllocatorCreateInfo" />
			<type name="VkmaVirtualBlockCreateFlagBits" />
			<type name="VkmaBuffer" />
			<type name="VkmaAllocationInfo" />
			<type name="VkmaAllocation" />
			<type name="VkmaDefragmentationMoveOperation" />
			<type name="VkmaVirtualAllocationInfo" />
			<type name="VkmaDefragmentationMove" />
			<type name="VkmaAllocatorCreateFlagBits" />
			<type name="VkmaStatistics" />
			<type name="VkmaBudget" />
			<type name="VkmaDefragmentationContext" />
			<type name="VkmaDefragmentationFlags" />
			<type name="VkmaDefragmentationInfo" />
			<type name="VkmaDetailedStatistics" />
			<type name="VkmaVirtualAllocation" />
			<type name="VkmaTotalStatistics" />
			<type name="VkmaVirtualBlockCreateInfo" />
			<type name="VkmaResult" />
			<type name="VKMA_NULL_HANDLE" />
			<type name="VkmaAllocationCreateFlagBits" />
			<type name="VkmaPoolCreateFlagBits" />
			<type name="VkmaDefragmentationFlagBits" />
			<type name="VkmaDefragmentationStats" />
			<type name="VkmaImage" />
			<command name="vkmaDestroyBuffer" />
			<command name="vkmaGetPoolName" />
			<command name="vkmaGetVirtualAllocationInfo" />
			<command name="vkmaCreateImage" />
			<command name="vkmaSetAllocationUserData" />
			<command name="vkmaBuildStatsString" />
			<command name="vkmaGetMemoryProperties" />
			<command name="vkmaGetBuffer" />
			<command name="vkmaCheckCorruption" />
			<command name="vkmaFlushAllocations" />
			<command name="vkmaSetPoolName" />
			<command name="vkmaIsVirtualBlockEmpty" />
			<command name="vkmaFindMemoryTypeIndex" />
			<command name="vkmaGetHeapBudgets" />
			<command name="vkmaCreateVirtualBlock" />
			<command name="vkmaGetAllocationInfo" />
			<command name="vkmaCalculateStatistics" />
			<command name="vkmaCreateAllocator" />
			<command name="vkmaDestroyAllocator" />
			<command name="vkmaCreateBuffer" />
			<command name="vkmaGetPhysicalDeviceProperties" />
			<command name="vkmaGetMemoryTypeProperties" />
			<command name="vkmaBuildVirtualBlockStatsString" />
			<command name="vkmaCreatePool" />
			<command name="vkmaSetCurrentFrameIndex" />
			<command name="vkmaClearVirtualBlock" />
			<command name="vkmaFindMemoryTypeIndexForBufferInfo" />
			<command name="vkmaSetAllocationName" />
			<command name="vkmaInvalidateAllocations" />
			<command name="vkmaAllocateMemory" />
			<command name="vkmaFindMemoryTypeIndexForImageInfo" />
			<command name="vkmaDestroyPool" />
			<command name="vkmaAllocateMemoryForBuffer" />
			<command name="vkmaGetPoolStatistics" />
			<command name="vkmaCalculatePoolStatistics" />
			<command name="vkmaGetVirtualBlockStatistics" />
			<command name="vkmaCheckPoolCorruption" />
			<command name="vkmaFreeStatsString" />
			<command name="vkmaAllocateMemoryPages" />
			<command name="vkmaAllocateMemoryForImage" />
			<command name="vkmaFreeMemory" />
			<command name="vkmaFreeMemoryPages" />
			<command name="vkmaBindBufferMemory2" />
			<command name="vkmaFlushAllocation" />
			<command name="vkmaGetAllocationMemoryProperties" />
			<command name="vkmaVirtualFree" />
			<command name="vkmaMapMemory" />
			<command name="vkmaGetBufferAllocation" />
			<command name="vkmaUnmapMemory" />
			<command name="vkmaInvalidateAllocation" />
			<command name="vkmaEndDefragmentation" />
			<command name="vkmaBeginDefragmentation" />
			<command name="vkmaDestroyVirtualBlock" />
			<command name="vkmaBindBufferMemory" />
			<command name="vkmaEndDefragmentationPass" />
			<command name="vkmaBeginDefragmentationPass" />
			<command name="vkmaDestroyImage" />
			<command name="vkmaBindImageMemory" />
			<command name="vkmaBindImageMemory2" />
			<command name="vkmaVirtualAllocate" />
			<command name="vkmaSetVirtualAllocationUserData" />
			<command name="vkmaCalculateVirtualBlockStatistics" />
			<command name="vkmaFreeVirtualBlockStatsString" />
			<command name="vkmaGetImage" />
			<command name="vkmaGetImageAllocation" />
		</require>
	</feature>
	<extensions comment="empty">
		<extension name="VK_WC_why_y_y_y_y" number="1" type="instance" author="WC" contact="@cvelth" supported="disabled" />
	</extensions>
	<spirvextensions comment="empty" />
	<spirvcapabilities comment="empty" />
</registry>
